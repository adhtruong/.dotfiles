[
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.previousPanelView",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.nextPanelView",
    "when": "panelFocus"
  },
  // Tab switching
  {
    "key": "shift+l",
    "command": "workbench.action.nextEditorInGroup",
    "when": "editorTextFocus && vim.mode != 'Insert' && !(vim.command =~ /(f|F|t|T)$/)"
  },
  {
    "key": "shift+h",
    "command": "workbench.action.previousEditorInGroup",
    "when": "editorTextFocus && vim.mode != 'Insert' && !(vim.command =~ /(f|F|t|T)$/)"
  },
  {
    "key": "shift+q",
    "command": "workbench.action.closeActiveEditor",
    "when": "editorTextFocus && vim.mode != 'Insert' && !(vim.command =~ /(f|F|t|T)$/)"
  },
  // Run commands
  {
    "key": "cmd+r",
    "command": "testing.runCurrentFile",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+R",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  // Sidebar functionality
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "ctrl+e",
    "when": "editorTextFocus && !sideBarVisible"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "list.select",
    "key": "enter",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // Improved search navigation
  {
    "key": "ctrl+p",
    "command": "search.action.focusSearchFromResults",
    "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+n",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "/",
    "command": "list.find",
    "when": "listFocus && listSupportsFind && !inputFocus"
  },
  {
    "key": "alt+cmd+f",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  // Extensions
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+/",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+;",
    "command": "vim.showQuickpickCmdLine",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  // Git
  {
    "key": "ctrl+g p", // Open diff preview
    "command": "git.openChange",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+g r", // Revert hunk
    "command": "git.revertSelectedRanges",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+g x", // Open file on remote
    "command": "gitlens.openFileOnRemote",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+g j", // Jump to next diff
    "command": "workbench.action.editor.nextChange",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+g k", // Jump to prev diff
    "command": "workbench.action.editor.previousChange",
    "when": "editorFocus"
  },
  // Peek navigation
  {
    "key": "h",
    "command": "editor.action.scrollLeftHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "l",
    "command": "editor.action.scrollRightHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "panelFocus"
  },
  {
    "key": "ctrl+m",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleMaximizeEditorGroup",
        "workbench.action.togglePanel"
      ]
    },
    "when": "editorFocus"
  }
]
