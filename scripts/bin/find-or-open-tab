#!/usr/bin/env osascript -l JavaScript

function run(argv) {
    if (argv.length === 0) {
        return 1;
    }

    const searchTerms = argv.map(term => term.toLowerCase());

    // Close Raycast if it's open
    const systemEvents = Application('System Events');
    const raycastProcesses = systemEvents.processes.whose({ name: 'Raycast' });
    if (raycastProcesses.length > 0) {
        const raycast = raycastProcesses[0];
        if (raycast.windows.length > 0) {
            systemEvents.keyCode(53); // Escape key
        }
    }

    const chrome = Application('Google Chrome');
    chrome.includeStandardAdditions = true;

    try {
        const windows = chrome.windows();

        // Search through all tabs
        for (let windowIndex = 0; windowIndex < windows.length; windowIndex++) {
            const win = windows[windowIndex];
            const tabs = win.tabs();

            for (let tabIndex = 0; tabIndex < tabs.length; tabIndex++) {
                const tab = tabs[tabIndex];
                const title = tab.title().toLowerCase();

                // Check title first (faster)
                const titleMatch = searchTerms.find(term => title.includes(term));
                if (titleMatch) {
                    chrome.activate();
                    win.index = 1; // Bring window to front
                    win.activeTabIndex = tabIndex + 1; // AppleScript uses 1-based indexing
                    return `Opening: ${tab.title()}`;
                }

                // Only check URL if title didn't match
                const url = tab.url().toLowerCase();
                const urlMatch = searchTerms.find(term => url.includes(term));
                if (urlMatch) {
                    chrome.activate();
                    win.index = 1;
                    win.activeTabIndex = tabIndex + 1;
                    return `Opening: ${tab.title()}`;
                }
            }
        }

        // No match found, open first search term as URL
        chrome.openLocation(argv[0]);
        chrome.activate();
        return `No matches found. Opening: ${argv[0]}`;

    } catch (error) {
        return `Error: ${error.message}`;
    }
}
